{"ast":null,"code":"var _jsxFileName = \"/home/user/potato-disease/frontend/src/home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./index.css\"; // Make sure this CSS file is present in the same folder\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setSelectedFile(file);\n    setPreview(URL.createObjectURL(file));\n    setData(null);\n  };\n  useEffect(() => {\n    const upload = async () => {\n      if (!selectedFile) return;\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n      try {\n        const response = await axios.post(process.env.REACT_APP_API_URL, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        if (response.status === 200) setData(response.data);\n      } catch (err) {\n        console.error(\"Upload error\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    upload();\n  }, [selectedFile]);\n  const handleClear = () => {\n    setSelectedFile(null);\n    setPreview(null);\n    setData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"\\uD83C\\uDF43 Potato Leaf Disease Classifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), !preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        onChange: handleFileChange,\n        accept: \"image/*\",\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileInput\",\n        className: \"upload-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), \" Upload Leaf Image\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button to upload a potato leaf image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Uploaded\",\n        className: \"preview-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-spinner fa-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), \" Analyzing...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this) : data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Prediction:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), \" \", data.class]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Confidence:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), \" \", (parseFloat(data.confidence) * 100).toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waiting for prediction...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-btn\",\n        onClick: handleClear,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), \" Clear\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"/PfHza0hKELMwp4GRftiIOvJQTQ=\");\n_c = ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUpload","_s","selectedFile","setSelectedFile","preview","setPreview","data","setData","loading","setLoading","handleFileChange","e","file","target","files","URL","createObjectURL","upload","formData","FormData","append","response","post","process","env","REACT_APP_API_URL","headers","status","err","console","error","handleClear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","accept","style","display","htmlFor","src","alt","class","parseFloat","confidence","toFixed","onClick","_c","$RefreshReg$"],"sources":["/home/user/potato-disease/frontend/src/home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./index.css\"; // Make sure this CSS file is present in the same folder\r\n\r\nexport const ImageUpload = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    setSelectedFile(file);\r\n    setPreview(URL.createObjectURL(file));\r\n    setData(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const upload = async () => {\r\n      if (!selectedFile) return;\r\n      setLoading(true);\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          process.env.REACT_APP_API_URL,\r\n          formData,\r\n          {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          }\r\n        );\r\n        if (response.status === 200) setData(response.data);\r\n      } catch (err) {\r\n        console.error(\"Upload error\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    upload();\r\n  }, [selectedFile]);\r\n\r\n  const handleClear = () => {\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n    setData(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"header\">üçÉ Potato Leaf Disease Classifier</header>\r\n\r\n      {!preview && (\r\n        <div className=\"upload-box\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"fileInput\"\r\n            onChange={handleFileChange}\r\n            accept=\"image/*\"\r\n            style={{ display: \"none\" }}\r\n          />\r\n          <label htmlFor=\"fileInput\" className=\"upload-btn\">\r\n            <i className=\"fas fa-upload\"></i> Upload Leaf Image\r\n          </label>\r\n          <p>Click the button to upload a potato leaf image</p>\r\n        </div>\r\n      )}\r\n\r\n      {preview && (\r\n        <div className=\"preview-card\">\r\n          <img src={preview} alt=\"Uploaded\" className=\"preview-img\" />\r\n          <div className=\"prediction\">\r\n            {loading ? (\r\n              <p className=\"loading\">\r\n                <i className=\"fas fa-spinner fa-spin\"></i> Analyzing...\r\n              </p>\r\n            ) : data ? (\r\n              <>\r\n                <p>\r\n                  <strong>Prediction:</strong> {data.class}\r\n                </p>\r\n                <p>\r\n                  <strong>Confidence:</strong>{\" \"}\r\n                  {(parseFloat(data.confidence) * 100).toFixed(2)}%\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <p>Waiting for prediction...</p>\r\n            )}\r\n          </div>\r\n          <button className=\"clear-btn\" onClick={handleClear}>\r\n            <i className=\"fas fa-trash\"></i> Clear\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}